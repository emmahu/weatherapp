{"version":3,"sources":["vendor/ember-cli/app-prefix.js","weather/adapter/application.js","weather/app.js","weather/controllers/add.js","weather/controllers/city.js","weather/controllers/index.js","weather/datamanager.js","weather/helpers/format-percentage.js","weather/helpers/format-precipitation.js","weather/helpers/format-pressurefromhpa.js","weather/helpers/format-temperature.js","weather/helpers/format-time.js","weather/helpers/format-visibility.js","weather/helpers/format-wind.js","weather/helpers/local-date.js","weather/helpers/week-day.js","weather/initializers/app-version.js","weather/initializers/export-application-global.js","weather/models/city.js","weather/router.js","weather/routes/city.js","weather/routes/edit.js","weather/routes/index.js","weather/templates/add.js","weather/templates/application.js","weather/templates/city.js","weather/templates/index.js","weather/tests/adapter/application.jshint.js","weather/tests/app.jshint.js","weather/tests/controllers/add.jshint.js","weather/tests/controllers/city.jshint.js","weather/tests/controllers/index.jshint.js","weather/tests/datamanager.jshint.js","weather/tests/helpers/format-percentage.jshint.js","weather/tests/helpers/format-precipitation.jshint.js","weather/tests/helpers/format-pressurefromhpa.jshint.js","weather/tests/helpers/format-temperature.jshint.js","weather/tests/helpers/format-time.jshint.js","weather/tests/helpers/format-visibility.jshint.js","weather/tests/helpers/format-wind.jshint.js","weather/tests/helpers/local-date.jshint.js","weather/tests/helpers/resolver.js","weather/tests/helpers/resolver.jshint.js","weather/tests/helpers/start-app.js","weather/tests/helpers/start-app.jshint.js","weather/tests/helpers/week-day.jshint.js","weather/tests/models/city.jshint.js","weather/tests/router.jshint.js","weather/tests/routes/city.jshint.js","weather/tests/routes/edit.jshint.js","weather/tests/routes/index.jshint.js","weather/tests/test-helper.js","weather/tests/test-helper.jshint.js","weather/tests/untitled folder/application.jshint.js","weather/untitled folder/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('weather/adapter/application', function () {\n\n\t'use strict';\n\n\t// import DS from'ember-data';\n\n\t// exportdefault DS.LSAdapter.extend({\n\n\t//   namespace: 'api/v1'\n\n\t// });\n\n});","define('weather/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'weather/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('weather/controllers/add', ['exports', 'ember', 'weather/models/city', 'weather/datamanager'], function (exports, Ember, City, DataManager) {\n\n  'use strict';\n\n  var addController = Ember['default'].Controller.extend({\n    cityList: null,\n    letter: \"\",\n    displayList: (function () {\n      var input = this.get(\"typeCity\");\n      if (input.length > 0) {\n        if (input.length == 1) {\n          this.set(\"letter\", \"\");\n          this.set(\"cityList\", null);\n        } else {\n          //get the auto input array\n          var self = this;\n          //reset to null for a new input\n          this.set(\"cityList\", null);\n          $.ajax({\n            url: \"http://coen268.peterbergstrom.com/locationautocomplete.php?query=\" + input,\n            dataType: \"jsonp\",\n            jsonp: \"callback\",\n            success: function success(data) {\n              if (data == null || data.length == 0) {} else {\n                self.set(\"cityList\", data);\n              }\n            }\n          });\n        }\n      } else {\n        this.set(\"letter\", \"\");\n        this.set(\"cityList\", null);\n      }\n    }).observes(\"typeCity\"),\n\n    actions: {\n      addCity: function addCity(cityId) {\n        //create a new city model\n        var cityList = this.get(\"cityList\");\n        var cityObject = cityList.findBy(\"id\", cityId);\n        console.log(cityId);\n\n        var cur = City['default'].create({\n          id: cityId,\n          name: cityObject.displayName,\n          lat: cityObject.lat,\n          lng: cityObject.lng,\n          lastUpdated: -1,\n          weatherData: null\n        });\n        DataManager['default'].fetchDataForCity(cur);\n        var cities = DataManager['default'].get(\"LocalStorageModels\");\n        cities.push(cur);\n        DataManager['default'].set(\"LocalStorageModels\", cities);\n        //reset to null\n        this.set(\"cityList\", null);\n        this.set(\"typeCity\", \"\");\n        this.transitionToRoute(\"index\");\n      },\n      back: function back() {\n        //reset to null\n        this.set(\"cityList\", null);\n        this.set(\"typeCity\", \"\");\n        this.transitionTo(\"index\");\n      }\n    }\n  });\n\n  exports['default'] = addController;\n\n});","define('weather/controllers/city', ['exports', 'ember', 'weather/datamanager'], function (exports, Ember, DataManager) {\n\n  'use strict';\n\n  var CityController = Ember['default'].ObjectController.extend({\n    actions: {\n      toggleUnits: function toggleUnits() {\n        var useType = !this.get(\"useUSUnits\");\n        this.set(\"useUSUnits\", useType);\n      }\n    },\n\n    useUSUnits: Ember['default'].computed.alias(\"dataManager.useUSUnits\"),\n\n    init: function init() {\n      this._super();\n      this.set(\"dataManager\", DataManager['default']);\n    }\n\n  });\n\n  exports['default'] = CityController;\n\n});","define('weather/controllers/index', ['exports', 'ember', 'weather/datamanager'], function (exports, Ember, DataManager) {\n\n  'use strict';\n\n  var IndexController = Ember['default'].ArrayController.extend({\n\n    useUSUnits: Ember['default'].computed.alias(\"dataManager.useUSUnits\"),\n    actions: {\n      toggleUnits: function toggleUnits() {\n        var useType = !this.get(\"useUSUnits\");\n        this.set(\"useUSUnits\", useType);\n      },\n      startEditing: function startEditing() {\n        this.set(\"isEditing\", false);\n      },\n      editCity: function editCity() {\n        var curr = this.get(\"isEditing\");\n        this.set(\"isEditing\", !curr);\n      },\n      \"delete\": function (city) {\n        this.get(\"dataManager\").deleteCity(city);\n      },\n      addcity: function addcity() {\n        // this.transitionTo('addcity');\n        this.transitionTo(\"add\");\n      }\n    },\n\n    isEditing: false,\n\n    init: function init() {\n      this._super();\n      this.set(\"dataManager\", DataManager['default']);\n    }\n\n  });\n\n  exports['default'] = IndexController;\n\n});","define('weather/datamanager', ['exports', 'ember', 'weather/models/city'], function (exports, Ember, City) {\n\n  'use strict';\n\n  var DataManager = Ember['default'].Object.create({\n    // Here you can pass flags/options to your application instance\n    // when it is created\n    weatherAPIBaseURL: \"https://api.forecast.io/forecast/\",\n\n    // The API key. Replace with your own.\n    weatherAPIKey: \"e157d0906b1d14f719ca4d1ad2a05325\",\n\n    // The key for the current location self will be kept in the data. It is special so it is defined here.\n    currentLocationKey: \"currentlocation\",\n\n    // The data is set to refresh every 10 minutes or 600,000 milliseconds.\n    dataRefreshInterval: 600000,\n\n    // The display time updates every 5 seconds or 5,000 milliseconds.\n    timeUpdateInterval: 5000,\n\n    // The id of the selected city self is shown in the details.\n    selectedCityId: \"\",\n\n    useUSUnits: true,\n\n    LocalStorageModels: [City['default'].create({\n      id: \"sanjose\",\n      name: \"San Jose\",\n      lat: 37.3382082,\n      lng: -121.88632860000001,\n      lastUpdated: -1,\n      weatherData: null\n    }), City['default'].create({\n      id: \"sydney\",\n      name: \"Sydney\",\n      lat: -33.8674869,\n      lng: 151.20699020000006,\n      lastUpdated: -1,\n      weatherData: null\n    })],\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Local Storage and Data Interaction\n    ////////////////////////////////////////////////////////////////////////////////\n\n    // Load from local storage.\n    loadDataFromLocalStorage: function loadDataFromLocalStorage() {\n      var self = DataManager;\n      var localStorageCities = JSON.parse(localStorage.getItem(\"cities\"));\n      if (localStorageCities) {\n        var cities = [];\n        for (var i = 0; i < localStorageCities.length; i++) {\n          cities.push(City['default'].create(localStorageCities[i]));\n        }\n        self.set(\"LocalStorageModels\", cities);\n      }\n      self.useUSUnits = JSON.parse(localStorage.getItem(\"useUSUnits\"));\n      if (self.useUSUnits === null || self.useUSUnits === undefined) {\n        self.useUSUnits = true;\n      }\n    },\n\n    // Save back to local storage.\n    syncLocalStorage: function syncLocalStorage() {\n      var self = DataManager,\n          cities = self.LocalStorageModels,\n          savedCities = [];\n      for (var i = 0; i < cities.length; i++) {\n        var city = cities[i];\n        savedCities.push({\n          id: city.get(\"id\"),\n          name: city.get(\"name\"),\n          lat: city.get(\"lat\"),\n          lng: city.get(\"lng\"),\n          lastUpdated: city.get(\"lastUpdated\"),\n          weatherData: city.get(\"weatherData\")\n        });\n      }\n      localStorage.setItem(\"cities\", JSON.stringify(savedCities));\n      localStorage.setItem(\"useUSUnits\", JSON.stringify(self.useUSUnits));\n    },\n\n    dataDidChange: function dataDidChange() {\n      this.syncLocalStorage();\n    },\n\n    deleteCity: function deleteCity(city) {\n      var self = this,\n          cities = self.get(\"LocalStorageModels\");\n      for (var i = 0; i < cities.length; i++) {\n        var tmp = cities[i];\n        if (tmp.get(\"id\") === city) {\n          cities.removeObject(tmp);\n          break;\n        }\n      }\n      self.set(\"LocalStorageModels\", cities);\n      self.dataDidChange();\n    },\n\n    // API interaction\n    fetchDataForCity: function fetchDataForCity(city) {\n      var self = this;\n      return Ember['default'].$.ajax({\n        url: self.get(\"weatherAPIBaseURL\") + self.get(\"weatherAPIKey\") + \"/\" + city.get(\"lat\") + \", \" + city.get(\"lng\") + \"?units=si\",\n        jsonp: \"callback\",\n        dataType: \"jsonp\" }).done(function (weatherData) {\n        city.set(\"weatherData\", weatherData).set(\"lastUpdated\", new Date().getTime());\n        self.dataDidChange();\n      }).then(function () {\n        return this;\n      });\n    },\n\n    shouldRefreshCity: function shouldRefreshCity(city) {\n      return city && city.get(\"lastUpdated\") === -1 || new Date().getTime() > city.get(\"lastUpdated\") + this.get(\"dataRefreshInterval\");\n    },\n\n    findCity: function findCity(id) {\n      var city = this.cityDataForId(id);\n      if (city && this.shouldRefreshCity(city)) {\n        return this.fetchDataForCity(city);\n      } else {\n        return Ember['default'].$.when(city);\n      }\n    },\n\n    paginationInfo: function paginationInfo(id) {\n      var cities = this.get(\"LocalStorageModels\");\n      var dots = new Array(cities.length);\n      for (var i = 0, iLen = cities.length; i < iLen; i++) {\n        if (cities[i].get(\"id\") === id) {\n          dots[i] = true;\n          return {\n            showPagination: iLen > 1,\n            prevCityId: i === 0 ? null : cities[i - 1].get(\"id\"),\n            nextCityId: i === iLen - 1 ? null : cities[i + 1].get(\"id\"),\n            dots: dots\n          };\n        }\n      }\n      return null;\n    },\n\n    // Return for a given id, the city\n    cityDataForId: function cityDataForId(id) {\n      var cities = this.get(\"LocalStorageModels\");\n      // var city = null;\n      for (var i = 0, iLen = cities.length; i < iLen; i++) {\n        if (cities[i].get(\"id\") === id) {\n          return cities[i];\n        }\n      }\n      return null;\n    },\n\n    refreshAllCitiesWeather: function refreshAllCitiesWeather() {\n      var self = DataManager;\n      var cities = self.get(\"LocalStorageModels\");\n      for (var i = 0, iLen = cities.length; i < iLen; i++) {\n        var city = cities[i];\n        if (self.shouldRefreshCity(city)) {\n          self.fetchDataForCity(city);\n        }\n      }\n    },\n\n    refreshAllCitiesTime: function refreshAllCitiesTime() {\n      var self = DataManager;\n      var cities = self.get(\"LocalStorageModels\");\n      for (var i = 0, iLen = cities.length; i < iLen; i++) {\n        var city = cities[i];\n        // This will trigger recalculation of sinceLastRefresh computed property.\n        city.notifyPropertyChange(\"lastUpdated\");\n      }\n    },\n    ////////////////////////////////////////////////////////////////////////////////\n    // Current Location Handling\n    ////////////////////////////////////////////////////////////////////////////////\n\n    // If current location is updated, then add the current location to the\n    // cities array if needed at the top of the list.\n    currentLocationWasUpdated: function currentLocationWasUpdated(position) {\n      var self = DataManager;\n      var city = self.cityDataForId(self.currentLocationKey),\n          shouldPush = false;\n\n      // If the current location does not exist in the cities array,\n      // create a new city.\n      if (!city) {\n        city = City['default'].create({\n          id: self.currentLocationKey,\n          name: \"Current Location\",\n          lastUpdated: -1,\n          weatherData: null\n        });\n        shouldPush = true;\n      }\n\n      // Either way, set the location information.\n      city.set(\"lat\", position.coords.latitude);\n      city.set(\"lng\", position.coords.longitude);\n\n      // Only push onto the array if it does not exist already.\n      if (shouldPush) {\n        self.get(\"LocalStorageModels\").unshift(city);\n        self.fetchDataForCity(city);\n      }\n    },\n\n    // If current location is denied, then just remove it from the list.\n    currentLocationWasDenied: function currentLocationWasDenied() {\n      var self = DataManager;\n      var cities = self.get(\"LocalStorageModels\"),\n          city = self.cityDataForId(self.currentLocationKey);\n      if (city) {\n        console.log(\"call here\");\n        cities.splice(cities.indexOf(city), 1);\n      }\n      // self.syncLocalStorage();\n    }\n\n  });\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(DataManager.currentLocationWasUpdated, DataManager.currentLocationWasDenied);\n  }\n\n  DataManager.loadDataFromLocalStorage();\n\n  DataManager.addObserver(\"useUSUnits\", function () {\n    DataManager.syncLocalStorage();\n  });\n\n  var updateTimeTimer = (function (_updateTimeTimer) {\n    var _updateTimeTimerWrapper = function updateTimeTimer() {\n      return _updateTimeTimer.apply(this, arguments);\n    };\n\n    _updateTimeTimerWrapper.toString = function () {\n      return _updateTimeTimer.toString();\n    };\n\n    return _updateTimeTimerWrapper;\n  })(function () {\n    DataManager.refreshAllCitiesTime();\n    Ember['default'].run.later(DataManager, updateTimeTimer, DataManager.timeUpdateInterval);\n  });\n\n  updateTimeTimer();\n\n  var updateWeatherTimer = (function (_updateWeatherTimer) {\n    var _updateWeatherTimerWrapper = function updateWeatherTimer() {\n      return _updateWeatherTimer.apply(this, arguments);\n    };\n\n    _updateWeatherTimerWrapper.toString = function () {\n      return _updateWeatherTimer.toString();\n    };\n\n    return _updateWeatherTimerWrapper;\n  })(function () {\n    DataManager.refreshAllCitiesWeather();\n    Ember['default'].run.later(DataManager, updateWeatherTimer, DataManager.dataRefreshInterval);\n  });\n\n  updateWeatherTimer();\n\n  exports['default'] = DataManager;\n\n  // context: city\n\n});","define('weather/helpers/format-percentage', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    return Math.round(value * 100) + \"%\";\n  });\n\n});","define('weather/helpers/format-precipitation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n\n    var precipitation = value,\n        useUSUnits = options.hash.unitParam;\n    if (precipitation === 0) {\n      return \"--\";\n    }\n\n    // If using US units, convert from mm to inches.\n    var amount = useUSUnits ? (precipitation * 0.0393701).toFixed(2) : precipitation;\n\n    return amount + (useUSUnits ? \" in\" : \" mm\");\n  });\n\n});","define('weather/helpers/format-pressurefromhpa', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    var pressure = value,\n        useUSUnits = options.hash.unitParam;\n    // If using US units, convert to inches.\n    if (useUSUnits) {\n      return (pressure * 0.000295299830714 * 100).toFixed(2) + \" in\";\n    }\n\n    return pressure.toFixed(2) + \" hPa\";\n  });\n\n});","define('weather/helpers/format-temperature', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    // var useUSUnits = options.hash['unitParam'] || config.useUSUnits;\n    var useUSUnits = options.hash.unitParam;\n    return Math.round(useUSUnits ? value * 9 / 5 + 32 : value) + \"˚\";\n  });\n\n});","define('weather/helpers/format-time', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    // var date = this.get('localDate'),\n    var date = value,\n\n    // showMinutes = true,\n    showMinutes = options.hash.showMinutes,\n        hours = date.getHours(),\n        meridian = \"AM\";\n\n    if (hours >= 12) {\n      if (hours > 12) {\n        hours -= 12;\n      }\n      meridian = \"PM\";\n    }\n\n    if (hours == 0) {\n      hours = 12;\n    }\n\n    if (showMinutes) {\n      var minutes = date.getMinutes();\n      if (minutes < 10) {\n        minutes = \"0\" + minutes;\n      }\n\n      return hours + \":\" + minutes + \" \" + meridian;\n    }\n    return hours + \" \" + meridian;\n  });\n\n});","define('weather/helpers/format-visibility', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n        // formatVisibilty: function() {\n        var visibility = value;\n\n        // If using US units, convert to miles.\n        var useUSUnits = options.hash.unitParam,\n            distance = (useUSUnits ? visibility * 0.621371 : visibility).toFixed(1);\n\n        return distance + (useUSUnits ? \" mi\" : \" km\");\n    });\n\n});","define('weather/helpers/format-wind', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n        var conditions = value,\n            useUSUnits = options.hash.unitParam,\n            formatBearing = options.hash.formatBearing,\n            speed = (useUSUnits ? conditions.windSpeed * 0.621371 : conditions.windSpeed).toFixed(1);\n        return speed + (useUSUnits ? \" mph\" : \" kph\") + \" \" + formatBearing;\n        // return speed + (useUSUnits ? ' mph' : ' kph') + ' ' + this.get('formatBearing');\n    });\n\n});","define('weather/helpers/local-date', ['exports', 'ember', 'weather/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    var time = value;\n    var timezoneOffset = options.hash.offset;\n    var timeOffsetSinceLastRefresh = options.hash.since;\n    // var time = this.get('weatherData').currently.time,\n    // timezoneOffset = this.get('weatherData').offset,\n    // timeOffsetSinceLastRefresh = new Date().getTime() - this.get('lastUpdated');\n    timeOffsetSinceLastRefresh = timeOffsetSinceLastRefresh ? timeOffsetSinceLastRefresh : 0;\n    var date = new Date(time * 1000 + timeOffsetSinceLastRefresh);\n    var utc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());\n\n    utc.setHours(utc.getHours() + timezoneOffset);\n    return utc;\n  });\n\n});","define('weather/helpers/week-day', ['exports', 'ember', 'weather/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value, options) {\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"][value.getDay()];\n  });\n\n});","define('weather/initializers/app-version', ['exports', 'weather/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('weather/initializers/export-application-global', ['exports', 'ember', 'weather/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('weather/models/city', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var City = Ember['default'].Object.extend({\n    id: \"sanjose\",\n    name: \"sanjose\",\n    lat: 0,\n    lng: 0,\n    lastUpdated: -1,\n    weatherData: null,\n\n    localDate: (function () {\n      var time = this.get(\"weatherData\").currently.time,\n          timezoneOffset = this.get(\"weatherData\").offset,\n          timeOffsetSinceLastRefresh = new Date().getTime() - this.get(\"lastUpdated\");\n      timeOffsetSinceLastRefresh = timeOffsetSinceLastRefresh ? timeOffsetSinceLastRefresh : 0;\n      var date = new Date(time * 1000 + timeOffsetSinceLastRefresh);\n      var utc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());\n\n      utc.setHours(utc.getHours() + timezoneOffset);\n      return utc;\n    }).property(\"weatherData\", \"lastUpdated\"),\n\n    hourly: (function () {\n      return this.get(\"weatherData.hourly.data.0\");\n    }).property(\"weatherData\"),\n\n    daily: (function () {\n      return this.get(\"weatherData.daily.data.0\");\n    }).property(\"weatherData\"),\n\n    conditionClassname: (function () {\n      var classNames = \"\",\n          data = this.get(\"weatherData\");\n\n      if (data) {\n        var conditionsNow = data.hourly.data[0],\n            date = new Date(conditionsNow.time * 1000);\n\n        // It is day if you're between sunrise and sunset. Then add the is-day class. Otherwise, add is-night\n        if (conditionsNow.time >= data.daily.data[0].sunriseTime && conditionsNow.time <= data.daily.data[0].sunsetTime) {\n          classNames += \"is-day \";\n        } else {\n          classNames += \"is-night \";\n        }\n\n        // If the icon name includes cloudy OR there is a cloudCover above 0.2, make it cloudy.\n        // The 0.2 is completely arbitary.\n        if (conditionsNow.icon.indexOf(\"cloudy\") !== -1 || conditionsNow.cloudCover > 0.2) {\n          classNames += \"is-cloudy \";\n        }\n      }\n      return classNames;\n    }).property(\"weatherData\"),\n\n    summary: (function () {\n      return this.get(\"weatherData.hourly.data.0.summary\");\n    }).property(\"weatherData\"),\n\n    relativeDate: (function () {\n      var localDate = this.get(\"localDate\"),\n          diff = Math.round((localDate.getTime() - new Date().getTime()) / (24 * 3600 * 1000)),\n          relativeDate = \"Today\";\n      if (diff < 0) {\n        relativeDate = \"Yesterday\";\n      } else if (diff > 0) {\n        relativeDate = \"Tomorrow\";\n      }\n      return relativeDate;\n    }).property(\"localDate\"),\n\n    hourlyListWidth: (function () {\n      return \"width: \" + Math.min(this.get(\"weatherData.hourly.data\").length, 24) * 64 + \"px;\";\n    }).property(\"weatherData\"),\n\n    hourlyData: (function () {\n      var data = this.get(\"weatherData.hourly.data\");\n      var newData = [];\n      for (var i = 0; i < Math.min(data.length, 24); ++i) {\n        var d = data[i];\n        newData.push({\n          first: i === 0,\n          icon: \"images/\" + d.icon + \".png\",\n          temperature: d.temperature,\n          time: d.time\n        });\n      }\n      return newData;\n    }).property(\"weatherData\"),\n\n    dailyData: (function () {\n      var data = this.get(\"weatherData.daily.data\");\n      var newData = [];\n      for (var i = 0; i < Math.min(data.length, 24); ++i) {\n        var d = data[i];\n        newData.push({\n          icon: \"images/\" + d.icon + \".png\",\n          temperatureMax: d.temperatureMax,\n          temperatureMin: d.temperatureMin,\n          time: d.time\n        });\n      }\n      return newData;\n    }).property(\"weatherData\"),\n\n    precipType: (function () {\n      return this.get(\"hourly.precipType\") === \"snow\" ? \"Chance of Snow:\" : \"Chance of Rain:\";\n    }).property(\"hourly\"),\n\n    formatBearing: (function () {\n      // From: http://stackoverflow.com/questions/3209899/determine-compass-direction-from-one-lat-lon-to-the-other\n      var bearings = [\"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\", \"N\"],\n          conditions = this.get(\"hourly\"),\n          brng = conditions.windBearing,\n          index = brng - 22.5;\n\n      if (index < 0) {\n        index += 360;\n      }\n      index = parseInt(index / 45);\n\n      return bearings[index];\n    }).property(\"hourly\"),\n\n    sinceLastRefresh: (function () {\n      return new Date().getTime() - this.get(\"lastUpdated\");\n    }).property(\"lastUpdated\"),\n\n    isCurLocation: (function () {\n      return this.get(\"id\") === \"currentlocation\";\n    }).property(\"id\")\n\n  });\n\n  exports['default'] = City;\n\n});","define('weather/router', ['exports', 'ember', 'weather/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.resource(\"city\", { path: \"city/:city_id\" });\n    this.route(\"add\", { path: \"add\" });\n    this.route(\"edit\", { path: \"edit\" });\n    // this.resource('attribution',{path:'http://forecast.io/'});\n  });\n\n  exports['default'] = Router;\n\n});","define('weather/routes/city', ['exports', 'ember', 'weather/models/city', 'weather/datamanager'], function (exports, Ember, City, DataManager) {\n\n  'use strict';\n\n  var CityRoute = Ember['default'].Route.extend({\n\n    model: function model(params) {\n      return DataManager['default'].findCity(params.city_id);\n    },\n\n    setupController: function setupController(controller, model) {\n      $(\"body\").removeClass().addClass(\"show-selected-city\");\n      $(\"body\").removeClass(\"is-cloudy\").removeClass(\"is-night\").removeClass(\"is-day\").addClass(model.get(\"conditionClassname\"));\n      $(\"nav\").removeClass(\"is-cloudy\").removeClass(\"is-night\").removeClass(\"is-day\").addClass(model.get(\"conditionClassname\"));\n      controller.set(\"content\", model).set(\"pagination\", DataManager['default'].paginationInfo(model.get(\"id\")));\n    }\n  });\n\n  exports['default'] = CityRoute;\n\n});","define('weather/routes/edit', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\tvar EditRoute = Ember['default'].Route.extend({});\n\n\texports['default'] = EditRoute;\n\n});","define('weather/routes/index', ['exports', 'ember', 'weather/models/city', 'weather/datamanager'], function (exports, Ember, City, DataManager) {\n\n  'use strict';\n\n  var IndexRoute = Ember['default'].Route.extend({\n\n    model: function model() {\n      var cities = DataManager['default'].get(\"LocalStorageModels\");\n      var promises = [];\n      for (var i = 0; i < cities.length; ++i) {\n        promises.push(DataManager['default'].findCity(cities[i].get(\"id\")));\n        // console.log(cities[i].get('id'));\n      }\n      return Ember['default'].$.when.apply(Ember['default'].$, promises).then(function () {\n        return cities;\n      });\n    },\n\n    setupController: function setupController(controller, model) {\n      $(\"body\").removeClass().addClass(\"show-cities-list\");\n      controller.set(\"model\", model);\n    }\n  });\n\n  exports['default'] = IndexRoute;\n\n});","define('weather/templates/add', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.setAttribute(el1,\"class\",\"subList\");\n            var el2 = dom.createElement(\"div\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(dom.childAt(element0, [0]),-1,-1);\n            element(env, element0, context, \"action\", [\"addCity\", get(env, context, \"city.id\")], {});\n            content(env, morph0, context, \"city.formatted_address\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"each\", [get(env, context, \"cityList\")], {\"keyword\": \"city\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        dom.setAttribute(el1,\"id\",\"cityList\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"listTile\");\n        var el3 = dom.createTextNode(\"\\n  Enter city, zip code, or airport location.\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"id\",\"cancel\");\n        var el3 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"listBody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [4]);\n        var morph0 = dom.createMorphAt(element1,2,3);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,-1);\n        inline(env, morph0, context, \"input\", [], {\"id\": \"listInput\", \"type\": \"text\", \"value\": get(env, context, \"typeCity\")});\n        element(env, element2, context, \"action\", [\"back\"], {});\n        block(env, morph1, context, \"if\", [get(env, context, \"cityList\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('weather/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('weather/templates/city', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createTextNode(\"                  Now\\n\");\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                  \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, subexpr = hooks.subexpr, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n              inline(env, morph0, context, \"format-time\", [subexpr(env, context, \"local-date\", [get(env, context, \"forecast.time\")], {\"offset\": get(env, context, \"weatherData.offset\")})], {\"showMinutes\": false});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"ul\");\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createElement(\"img\");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element6 = dom.childAt(fragment, [1, 1]);\n            var element7 = dom.childAt(element6, [3, 1]);\n            var morph0 = dom.createMorphAt(dom.childAt(element6, [1]),0,1);\n            var morph1 = dom.createMorphAt(dom.childAt(element6, [5]),0,1);\n            block(env, morph0, context, \"if\", [get(env, context, \"forecast.first\")], {}, child0, child1);\n            element(env, element7, context, \"bind-attr\", [], {\"src\": get(env, context, \"forecast.icon\")});\n            inline(env, morph1, context, \"format-temperature\", [get(env, context, \"forecast.temperature\")], {\"unitParam\": get(env, context, \"usUnitAlias\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          set(env, context, \"usUnitAlias\", blockArguments[0]);\n          block(env, morph0, context, \"each\", [get(env, context, \"hourlyData\")], {\"keyword\": \"forecast\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"ul\");\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createElement(\"img\");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, subexpr = hooks.subexpr, inline = hooks.inline, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element4 = dom.childAt(fragment, [1, 1]);\n            var element5 = dom.childAt(element4, [3, 1]);\n            var morph0 = dom.createMorphAt(dom.childAt(element4, [1]),0,1);\n            var morph1 = dom.createMorphAt(dom.childAt(element4, [5]),0,1);\n            var morph2 = dom.createMorphAt(dom.childAt(element4, [7]),0,1);\n            inline(env, morph0, context, \"week-day\", [subexpr(env, context, \"local-date\", [get(env, context, \"forecast.time\")], {\"offset\": get(env, context, \"weatherData.offset\")})], {});\n            element(env, element5, context, \"bind-attr\", [], {\"src\": get(env, context, \"forecast.icon\")});\n            inline(env, morph1, context, \"format-temperature\", [get(env, context, \"forecast.temperatureMax\")], {\"unitParam\": get(env, context, \"usUnitAlias\")});\n            inline(env, morph2, context, \"format-temperature\", [get(env, context, \"forecast.temperatureMin\")], {\"unitParam\": get(env, context, \"usUnitAlias\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          set(env, context, \"usUnitAlias\", blockArguments[0]);\n          block(env, morph0, context, \"each\", [get(env, context, \"dailyData\")], {\"keyword\": \"forecast\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createTextNode(\"◀\");\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"city\", get(env, context, \"pagination.prevCityId\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createTextNode(\"◀\");\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"city\", get(env, context, \"id\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            var el2 = dom.createTextNode(\"\\n            •\\n          \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": \":dot dot:current\"});\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createTextNode(\"▶\");\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"city\", get(env, context, \"pagination.nextCityId\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child4 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createTextNode(\"▶\");\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"city\", get(env, context, \"id\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"next-prev-nav\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"indicator-dots\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var element3 = dom.childAt(element1, [5]);\n          var morph0 = dom.createMorphAt(element2,0,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),0,1);\n          var morph2 = dom.createMorphAt(element3,0,1);\n          element(env, element2, context, \"bind-attr\", [], {\"class\": \":prev-button pagination.prevCityId::disabled\"});\n          block(env, morph0, context, \"if\", [get(env, context, \"pagination.prevCityId\")], {}, child0, child1);\n          block(env, morph1, context, \"each\", [get(env, context, \"pagination.dots\")], {\"keyword\": \"dot\"}, child2, null);\n          element(env, element3, context, \"bind-attr\", [], {\"class\": \":next-button pagination.nextCityId::disabled\"});\n          block(env, morph2, context, \"if\", [get(env, context, \"pagination.nextCityId\")], {}, child3, child4);\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\"☰\");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"selected-city\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"city-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"today\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"today-overview\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"today-hourly-list-container\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"today-hourly-list\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"forecast\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"forecast-list\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"today-details\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        dom.setAttribute(el3,\"class\",\"today-summary\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"today-details-list\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Sunrise:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Sunset:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Humidity:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Wind:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Feels like:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Precipitation:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Pressure:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            Visibility:\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"celsius\");\n        var el6 = dom.createTextNode(\"˚C\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n         ⁄\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"fahrenheit\");\n        var el6 = dom.createTextNode(\"˚F\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"list-button\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, element = hooks.element, block = hooks.block, subexpr = hooks.subexpr;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element8 = dom.childAt(fragment, [0]);\n        var element9 = dom.childAt(element8, [1]);\n        var element10 = dom.childAt(element8, [3]);\n        var element11 = dom.childAt(element10, [1]);\n        var element12 = dom.childAt(element10, [3, 1]);\n        var element13 = dom.childAt(element8, [7]);\n        var element14 = dom.childAt(element13, [3]);\n        var element15 = dom.childAt(element14, [7, 1]);\n        var element16 = dom.childAt(fragment, [2]);\n        var element17 = dom.childAt(element16, [1]);\n        var element18 = dom.childAt(element17, [1]);\n        var element19 = dom.childAt(element18, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element9, [1]),-1,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(element9, [3]),-1,-1);\n        var morph2 = dom.createMorphAt(dom.childAt(element9, [5]),-1,-1);\n        var morph3 = dom.createMorphAt(dom.childAt(element11, [1]),0,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element11, [3]),0,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element11, [5]),0,1);\n        var morph6 = dom.createMorphAt(dom.childAt(element11, [7]),0,1);\n        var morph7 = dom.createMorphAt(element12,0,1);\n        var morph8 = dom.createMorphAt(dom.childAt(element8, [5, 1]),0,1);\n        var morph9 = dom.createMorphAt(dom.childAt(element13, [1]),0,1);\n        var morph10 = dom.createMorphAt(dom.childAt(element14, [1, 1, 3]),0,1);\n        var morph11 = dom.createMorphAt(dom.childAt(element14, [3, 1, 3]),0,1);\n        var morph12 = dom.createMorphAt(dom.childAt(element15, [1]),0,1);\n        var morph13 = dom.createMorphAt(dom.childAt(element15, [3]),0,1);\n        var morph14 = dom.createMorphAt(dom.childAt(element14, [9, 1, 3]),0,1);\n        var morph15 = dom.createMorphAt(dom.childAt(element14, [13, 1, 3]),0,1);\n        var morph16 = dom.createMorphAt(dom.childAt(element14, [15, 1, 3]),0,1);\n        var morph17 = dom.createMorphAt(dom.childAt(element14, [19, 1, 3]),0,1);\n        var morph18 = dom.createMorphAt(dom.childAt(element14, [21, 1, 3]),0,1);\n        var morph19 = dom.createMorphAt(dom.childAt(element14, [25, 1, 3]),0,1);\n        var morph20 = dom.createMorphAt(element17,2,3);\n        var morph21 = dom.createMorphAt(dom.childAt(element17, [4]),0,1);\n        content(env, morph0, context, \"name\");\n        content(env, morph1, context, \"summary\");\n        inline(env, morph2, context, \"format-temperature\", [get(env, context, \"hourly.temperature\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        inline(env, morph3, context, \"week-day\", [get(env, context, \"localDate\")], {});\n        content(env, morph4, context, \"relativeDate\");\n        inline(env, morph5, context, \"format-temperature\", [get(env, context, \"daily.temperatureMax\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        inline(env, morph6, context, \"format-temperature\", [get(env, context, \"daily.temperatureMin\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        element(env, element12, context, \"bind-attr\", [], {\"style\": get(env, context, \"hourlyListWidth\")});\n        block(env, morph7, context, \"with\", [get(env, context, \"useUSUnits\")], {}, child0, null);\n        block(env, morph8, context, \"with\", [get(env, context, \"useUSUnits\")], {}, child1, null);\n        content(env, morph9, context, \"weatherData.daily.summary\");\n        inline(env, morph10, context, \"format-time\", [subexpr(env, context, \"local-date\", [get(env, context, \"daily.sunriseTime\")], {\"offset\": get(env, context, \"weatherData.offset\")})], {\"showMinutes\": true});\n        inline(env, morph11, context, \"format-time\", [subexpr(env, context, \"local-date\", [get(env, context, \"daily.sunsetTime\")], {\"offset\": get(env, context, \"weatherData.offset\")})], {\"showMinutes\": true});\n        content(env, morph12, context, \"precipType\");\n        inline(env, morph13, context, \"format-percentage\", [get(env, context, \"hourly.precipProbability\")], {});\n        inline(env, morph14, context, \"format-percentage\", [get(env, context, \"hourly.humidity\")], {});\n        inline(env, morph15, context, \"format-wind\", [get(env, context, \"hourly\")], {\"unitParam\": get(env, context, \"useUSUnits\"), \"formatBearing\": get(env, context, \"formatBearing\")});\n        inline(env, morph16, context, \"format-temperature\", [get(env, context, \"hourly.apparentTemperature\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        inline(env, morph17, context, \"format-precipitation\", [get(env, context, \"hourly.precipIntensity\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        inline(env, morph18, context, \"format-pressurefromhpa\", [get(env, context, \"hourly.pressure\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        inline(env, morph19, context, \"format-visibility\", [get(env, context, \"hourly.visibility\")], {\"unitParam\": get(env, context, \"useUSUnits\")});\n        element(env, element16, context, \"bind-attr\", [], {\"class\": get(env, context, \"conditionClassname\")});\n        element(env, element18, context, \"bind-attr\", [], {\"class\": \":celsius-or-fahrenheit useUSUnits:use-fahrenheit:use-celsius\"});\n        element(env, element19, context, \"action\", [\"toggleUnits\"], {});\n        block(env, morph20, context, \"if\", [get(env, context, \"pagination.showPagination\")], {}, child2, null);\n        block(env, morph21, context, \"link-to\", [\"index\"], {}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('weather/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"ul\");\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"li\");\n                dom.setAttribute(el2,\"class\",\"city-info\");\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                dom.setAttribute(el3,\"class\",\"noncircle\");\n                var el4 = dom.createTextNode(\"\\n             \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createElement(\"div\");\n                dom.setAttribute(el4,\"id\",\"dash\");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                dom.setAttribute(el3,\"class\",\"time\");\n                var el4 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                dom.setAttribute(el3,\"class\",\"city-name\");\n                var el4 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"li\");\n                dom.setAttribute(el2,\"class\",\"temperature\");\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n        \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, subexpr = hooks.subexpr, inline = hooks.inline, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element5 = dom.childAt(fragment, [1]);\n                var element6 = dom.childAt(element5, [1]);\n                var element7 = dom.childAt(element6, [1]);\n                var morph0 = dom.createMorphAt(dom.childAt(element6, [3]),0,1);\n                var morph1 = dom.createMorphAt(dom.childAt(element6, [5]),0,1);\n                var morph2 = dom.createMorphAt(dom.childAt(element5, [3]),0,1);\n                element(env, element7, context, \"action\", [\"delete\", get(env, context, \"id\")], {});\n                inline(env, morph0, context, \"format-time\", [subexpr(env, context, \"local-date\", [get(env, context, \"weatherData.currently.time\")], {\"offset\": get(env, context, \"weatherData.offset\"), \"since\": get(env, context, \"sinceLastRefresh\")})], {\"showMinutes\": true});\n                content(env, morph1, context, \"name\");\n                inline(env, morph2, context, \"format-temperature\", [get(env, context, \"hourly.temperature\")], {\"unitParam\": get(env, context, \"usUnitAlias\")});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"ul\");\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"li\");\n                dom.setAttribute(el2,\"class\",\"city-info\");\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                var el4 = dom.createTextNode(\"\\n             \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createElement(\"div\");\n                dom.setAttribute(el4,\"id\",\"dash\");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                var el4 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                var el4 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"li\");\n                dom.setAttribute(el2,\"class\",\"temperature\");\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n        \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, subexpr = hooks.subexpr, inline = hooks.inline, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element0 = dom.childAt(fragment, [1]);\n                var element1 = dom.childAt(element0, [1]);\n                var element2 = dom.childAt(element1, [1]);\n                var element3 = dom.childAt(element1, [3]);\n                var element4 = dom.childAt(element1, [5]);\n                var morph0 = dom.createMorphAt(element3,0,1);\n                var morph1 = dom.createMorphAt(element4,0,1);\n                var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),0,1);\n                element(env, element2, context, \"action\", [\"delete\", get(env, context, \"id\")], {});\n                element(env, element2, context, \"bind-attr\", [], {\"class\": \"controller.isEditing:circle:noncircle\"});\n                element(env, element3, context, \"bind-attr\", [], {\"class\": \"controller.isEditing:time-edit:time\"});\n                inline(env, morph0, context, \"format-time\", [subexpr(env, context, \"local-date\", [get(env, context, \"weatherData.currently.time\")], {\"offset\": get(env, context, \"weatherData.offset\"), \"since\": get(env, context, \"sinceLastRefresh\")})], {\"showMinutes\": true});\n                element(env, element4, context, \"bind-attr\", [], {\"class\": \"controller.isEditing:city-name-edit:city-name\"});\n                content(env, morph1, context, \"name\");\n                inline(env, morph2, context, \"format-temperature\", [get(env, context, \"hourly.temperature\")], {\"unitParam\": get(env, context, \"usUnitAlias\")});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n              var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n              block(env, morph0, context, \"if\", [get(env, context, \"isCurLocation\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"      \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element8 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element8,0,1);\n            element(env, element8, context, \"bind-attr\", [], {\"class\": get(env, context, \"conditionClassname\")});\n            block(env, morph0, context, \"link-to\", [\"city\", get(env, context, \"id\")], {\"disabled\": get(env, context, \"controller.isEditing\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          set(env, context, \"usUnitAlias\", blockArguments[0]);\n          block(env, morph0, context, \"each\", [get(env, context, \"model\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\"        Done\\n\");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\"      Edit\\n\");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"cities-list\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"edit-title\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"attribution\");\n        dom.setAttribute(el3,\"href\",\"http://forecast.io/\");\n        dom.setAttribute(el3,\"target\",\"_blank\");\n        var el4 = dom.createTextNode(\"Powered by Forecast\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"celsius\");\n        var el6 = dom.createTextNode(\"˚C\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        ⁄\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"fahrenheit\");\n        var el6 = dom.createTextNode(\"˚F \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"plus\");\n        var el4 = dom.createTextNode(\"+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element9 = dom.childAt(fragment, [2, 1]);\n        var element10 = dom.childAt(element9, [1]);\n        var element11 = dom.childAt(element9, [5]);\n        var element12 = dom.childAt(element11, [1]);\n        var element13 = dom.childAt(element9, [7]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1]),0,1);\n        var morph1 = dom.createMorphAt(element10,0,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element12, [3]),0,-1);\n        block(env, morph0, context, \"with\", [get(env, context, \"useUSUnits\")], {}, child0, null);\n        element(env, element10, context, \"action\", [\"editCity\"], {});\n        block(env, morph1, context, \"if\", [get(env, context, \"isEditing\")], {}, child1, child2);\n        element(env, element11, context, \"bind-attr\", [], {\"class\": \":celsius-or-fahrenheit controller.useUSUnits:use-fahrenheit:use-celsius\"});\n        element(env, element12, context, \"action\", [\"toggleUnits\"], {});\n        inline(env, morph2, context, \"format-temperature\", [get(env, context, \"temperature\")], {\"unitParam\": get(env, context, \"controller.useUSUnits\")});\n        element(env, element13, context, \"action\", [\"addcity\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('weather/tests/adapter/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapter');\n  test('adapter/application.js should pass jshint', function() { \n    ok(true, 'adapter/application.js should pass jshint.'); \n  });\n\n});","define('weather/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('weather/tests/controllers/add.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/add.js should pass jshint', function() { \n    ok(false, 'controllers/add.js should pass jshint.\\ncontrollers/add.js: line 11, col 26, Expected \\'===\\' and instead saw \\'==\\'.\\ncontrollers/add.js: line 24, col 47, Expected \\'===\\' and instead saw \\'==\\'.\\ncontrollers/add.js: line 19, col 9, \\'$\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('weather/tests/controllers/city.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/city.js should pass jshint', function() { \n    ok(true, 'controllers/city.js should pass jshint.'); \n  });\n\n});","define('weather/tests/controllers/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/index.js should pass jshint', function() { \n    ok(true, 'controllers/index.js should pass jshint.'); \n  });\n\n});","define('weather/tests/datamanager.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('datamanager.js should pass jshint', function() { \n    ok(true, 'datamanager.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/format-percentage.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-percentage.js should pass jshint', function() { \n    ok(false, 'helpers/format-percentage.js should pass jshint.\\nhelpers/format-percentage.js: line 5, col 58, \\'options\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('weather/tests/helpers/format-precipitation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-precipitation.js should pass jshint', function() { \n    ok(true, 'helpers/format-precipitation.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/format-pressurefromhpa.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-pressurefromhpa.js should pass jshint', function() { \n    ok(true, 'helpers/format-pressurefromhpa.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/format-temperature.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-temperature.js should pass jshint', function() { \n    ok(true, 'helpers/format-temperature.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/format-time.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-time.js should pass jshint', function() { \n    ok(false, 'helpers/format-time.js should pass jshint.\\nhelpers/format-time.js: line 20, col 17, Expected \\'===\\' and instead saw \\'==\\'.\\n\\n1 error'); \n  });\n\n});","define('weather/tests/helpers/format-visibility.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-visibility.js should pass jshint', function() { \n    ok(true, 'helpers/format-visibility.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/format-wind.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-wind.js should pass jshint', function() { \n    ok(true, 'helpers/format-wind.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/local-date.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/local-date.js should pass jshint', function() { \n    ok(false, 'helpers/local-date.js should pass jshint.\\nhelpers/local-date.js: line 2, col 8, \\'config\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('weather/tests/helpers/resolver', ['exports', 'ember/resolver', 'weather/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('weather/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/start-app', ['exports', 'ember', 'weather/app', 'weather/router', 'weather/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('weather/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('weather/tests/helpers/week-day.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/week-day.js should pass jshint', function() { \n    ok(false, 'helpers/week-day.js should pass jshint.\\nhelpers/week-day.js: line 2, col 8, \\'config\\' is defined but never used.\\nhelpers/week-day.js: line 5, col 58, \\'options\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('weather/tests/models/city.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/city.js should pass jshint', function() { \n    ok(false, 'models/city.js should pass jshint.\\nmodels/city.js: line 40, col 11, \\'date\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('weather/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('weather/tests/routes/city.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/city.js should pass jshint', function() { \n    ok(false, 'routes/city.js should pass jshint.\\nroutes/city.js: line 12, col 5, \\'$\\' is not defined.\\nroutes/city.js: line 13, col 5, \\'$\\' is not defined.\\nroutes/city.js: line 14, col 5, \\'$\\' is not defined.\\nroutes/city.js: line 2, col 8, \\'City\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('weather/tests/routes/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/edit.js should pass jshint', function() { \n    ok(true, 'routes/edit.js should pass jshint.'); \n  });\n\n});","define('weather/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(false, 'routes/index.js should pass jshint.\\nroutes/index.js: line 20, col 5, \\'$\\' is not defined.\\nroutes/index.js: line 2, col 8, \\'City\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('weather/tests/test-helper', ['weather/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('weather/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('weather/tests/untitled folder/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - untitled folder');\n  test('untitled folder/application.js should pass jshint', function() { \n    ok(true, 'untitled folder/application.js should pass jshint.'); \n  });\n\n});","define('weather/untitled folder/application', function () {\n\n\t'use strict';\n\n\t// import DS from'ember-data';\n\n\t// DS.attr.transforms.object = {\n\t//   from: function(serialized) {\n\t//     return Em.none(serialized) ? {} : serialized;\n\t//   },\n\t//   to: function(deserialized) {\n\t//     return Em.none(deserialized) ? {} : deserialized;\n\t//   }\n\t// }\n\n\t// IT changed FROM THIS:\n\n\t// DS.attr.transforms.object = {\n\t//   from: function(serialized) {\n\t//     return Em.none(serialized) ? {} : serialized;\n\t//   },\n\t//   to: function(deserialized) {\n\t//     return Em.none(deserialized) ? {} : deserialized;\n\t//   }\n\t// }\n\t// TO THIS:\n\n\t// DS.RESTAdapter.registerTransform('object', {\n\t//   fromJSON: function(serialized) {\n\t//     return Em.none(serialized) ? {} : serialized;\n\t//   },\n\t//   toJSON: function(deserialized) {\n\t//     return Em.none(deserialized) ? {} : deserialized;\n\t//   }\n\t// })\n\n\t// exportdefault DS.LSSerializer.extend();\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('weather/config/environment', ['ember'], function(Ember) {\n  var prefix = 'weather';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"weather/tests/test-helper\");\n} else {\n  require(\"weather/app\")[\"default\"].create({\"name\":\"weather\",\"version\":\"0.0.0.7b009a89\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrgrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"weather.js"}